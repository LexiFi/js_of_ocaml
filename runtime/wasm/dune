(install
 (section lib)
 (package wasm_of_ocaml-compiler)
 (files runtime.wasm runtime.js))

(rule
  (target version-dependent.wat)
  (deps post-5.2.wat)
  (enabled_if (>= %{ocaml_version} 5.2.0))
  (action
    (copy %{deps} %{target})))

(rule
  (target version-dependent.wat)
  (deps pre-5.2.wat)
  (enabled_if (< %{ocaml_version} 5.2.0))
  (action
    (copy %{deps} %{target})))

(rule
 (target runtime.wasm)
 (deps
  args
  array.wat
  backtrace.wat
  bigarray.wat
  bigstring.wat
  compare.wat
  custom.wat
  domain.wat
  dynlink.wat
  effect.wat
  fail.wat
  float.wat
  fs.wat
  gc.wat
  hash.wat
  int32.wat
  int64.wat
  ints.wat
  io.wat
  jslib.wat
  jslib_js_of_ocaml.wat
  jsstring.wat
  lexing.wat
  marshal.wat
  md5.wat
  nat.wat
  obj.wat
  parsing.wat
  printexc.wat
  prng.wat
  runtime_events.wat
  stdlib.wat
  str.wat
  string.wat
  sync.wat
  sys.wat
  toplevel.wat
  unix.wat
  version-dependent.wat
  weak.wat
  zstd.wat)
 (action
  (progn
   (system
    "which wasm-merge > /dev/null || (echo 'Error: Binaryen tools not found in the PATH'; false)")
   (system
    "wasm-merge --version | grep -q 'version \\(11[89]\\|1[2-9][0-9]\\)' || (echo 'Error: Binaryen version 118 or greater is currently required'; false)")
   (pipe-stdout
    (run
     wasm-merge
     -g
     --enable-gc
     --enable-exception-handling
     --enable-reference-types
     --enable-tail-call
     --enable-strings
     --enable-multivalue
     --enable-bulk-memory
     %{read-lines:args}
     -o
     -)
    (run
     wasm-opt
     -g
     --enable-gc
     --enable-exception-handling
     --enable-reference-types
     --enable-tail-call
     --enable-strings
     --enable-multivalue
     --enable-bulk-memory
     -
     -O3
     -o
     %{target})))))

(rule
 (target args)
 (deps
  args.ml
  array.wat
  backtrace.wat
  bigarray.wat
  bigstring.wat
  compare.wat
  custom.wat
  domain.wat
  dynlink.wat
  effect.wat
  fail.wat
  float.wat
  fs.wat
  gc.wat
  hash.wat
  int32.wat
  int64.wat
  ints.wat
  io.wat
  jslib.wat
  jslib_js_of_ocaml.wat
  jsstring.wat
  lexing.wat
  marshal.wat
  md5.wat
  nat.wat
  obj.wat
  parsing.wat
  printexc.wat
  prng.wat
  runtime_events.wat
  stdlib.wat
  str.wat
  string.wat
  sync.wat
  sys.wat
  toplevel.wat
  unix.wat
  version-dependent.wat
  weak.wat
  zstd.wat)
 (action
  (with-stdout-to
   %{target}
   (run ocaml %{deps}))))
